// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyGameIO.Data.Context;

namespace MyGameIO.Data.Migrations
{
    [DbContext(typeof(ProjectDbContext))]
    partial class ProjectDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MyGameIO.Business.Models.Amigo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("DataDevolucao");

                    b.Property<DateTime?>("DataEmprestimo");

                    b.Property<string>("Documento")
                        .IsRequired()
                        .HasColumnType("varchar(11)");

                    b.Property<string>("Imagem")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Amigos");
                });

            modelBuilder.Entity("MyGameIO.Business.Models.Endereco", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("AmigoId");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("varchar(8)");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Complemento")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("AmigoId")
                        .IsUnique();

                    b.ToTable("Enderecos");
                });

            modelBuilder.Entity("MyGameIO.Business.Models.Jogo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("AmigoId");

                    b.Property<DateTime?>("DataEmprestimo");

                    b.Property<bool>("Disponivel");

                    b.Property<string>("Imagem")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int>("TipoConsole");

                    b.HasKey("Id");

                    b.HasIndex("AmigoId");

                    b.ToTable("Jogos");
                });

            modelBuilder.Entity("MyGameIO.Business.Models.Endereco", b =>
                {
                    b.HasOne("MyGameIO.Business.Models.Amigo", "Amigo")
                        .WithOne("Endereco")
                        .HasForeignKey("MyGameIO.Business.Models.Endereco", "AmigoId");
                });

            modelBuilder.Entity("MyGameIO.Business.Models.Jogo", b =>
                {
                    b.HasOne("MyGameIO.Business.Models.Amigo", "Amigo")
                        .WithMany("Jogos")
                        .HasForeignKey("AmigoId");
                });
#pragma warning restore 612, 618
        }
    }
}
